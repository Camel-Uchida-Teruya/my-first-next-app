import { client } from "@/libs/client";
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from "../../styles/objects/projects/_article.module.scss"
import { Header } from '@/components/layouts/Header'
import { Footer } from '@/components/layouts/Footer'

export default function ArticleId({ article }) {
  return (
    <>
      <Head>
        <title>{`${article.title} | ブログ`}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className='min-h-screen px-5 pb-24 bg-teal-200'>
        <article className='mx-auto max-w-5xl p-5 bg-white rounded-xl'>
          <section>
            <h2 className='text-xl'>{article.title}</h2>
            <p>{article.publishedAt}</p>
          </section>
          <section className="mt-20">
            <div
              dangerouslySetInnerHTML={{
                __html: `${article.content}`,
              }}
            />
          </section>
        </article>
      </main>
      <main>
      </main>
      <Footer />
    </>
  );
}

// 静的生成のためのパスを指定します
export const getStaticPaths = async () => {
  const data = await client.get({ endpoint: "article" });
  const paths = data.contents.map((content) => `/article/${content.id}`);
  return { paths, fallback: false };
};

// データをテンプレートに受け渡す部分の処理を記述します
export const getStaticProps = async (context) => {
  const id = context.params.id;
  const data = await client.get({ endpoint: "article", contentId: id });
  return {
    props: {
      article: data,
    },
  };
};
